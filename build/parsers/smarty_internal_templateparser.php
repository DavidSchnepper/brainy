<?php
/**
 * Brainy Internal Plugin Templateparser
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 * @package Brainy
 * @subpackage Compiler
 * @author Uwe Tews
 * @author Matt Basta
 */

class BrainySafeLookupWrapper
{
    private $unsafeVersion;
    private $safeVersion;

    /**
     * @param string $unsafe
     * @param string $safe
     */
    public function __construct($unsafe, $safe) {
        $this->unsafeVersion = $unsafe;
        $this->safeVersion = $safe;
    }

    /**
     * @return string
     */
    public function getUnsafe() {
        return $this->unsafeVersion;
    }

    /**
     * The __toString() method should always return the safe version.
     * @return string
     */
    public function __toString() {
        return $this->safeVersion;
    }
}

class BrainyModifierWrapper
{
    private $code;
    private $modifier;

    /**
     * @param string $modifier_name
     */
    public function __construct($code, $modifier_name) {
        $this->code = $code;
        $this->unsafeVersion = $unsafe;
    }

    /**
     * @return string The name of the modifier that's wrapped.
     */
    public function getName() {
        return $this->modifier;
    }

    /**
     * The __toString() method should always return the generated PHP.
     * @return string
     */
    public function __toString() {
        return $this->code;
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 14 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 75 "smarty_internal_templateparser.php"
{
#line 16 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public static $prefix_number = 0;
    private $lex;
    private $internalError = false;
    private $strip = false;

    private $safe_lookups = 0;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->security = isset($this->smarty->security_policy);
        $this->block_nesting_level = 0;
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);

        $this->safe_lookups = $this->smarty->safe_lookups;
    }

    public function compileVariable($variable, $value = 'value') {
        $unsafe = '$_smarty_tpl->tpl_vars[' . $variable . ']->' . $value;
        if ($this->safe_lookups === 0) { // Unsafe lookups
            return $unsafe;
        }
        $safe = 'smarty_safe_var_lookup($_smarty_tpl->tpl_vars, '. $variable .', ' . $this->safe_lookups . ')->' . $value;
        return new BrainySafeLookupWrapper($unsafe, $safe);
    }

    public function compileSafeLookupWithBase($base, $variable) {
        $unsafe = $base . '[' . $variable . ']';
        if ($this->safe_lookups === 0) { // Unsafe lookups
            return $unsafe;
        }
        $safe = 'smarty_safe_array_lookup(' . $base . ', '. $variable .', ' . $this->safe_lookups . ')';
        return new BrainySafeLookupWrapper($unsafe, $safe);
    }
#line 123 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_RDEL                           =  3;
    const TP_COMMENT                        =  4;
    const TP_TEXT                           =  5;
    const TP_STRIPON                        =  6;
    const TP_STRIPOFF                       =  7;
    const TP_BLOCKSOURCE                    =  8;
    const TP_LITERALSTART                   =  9;
    const TP_LITERALEND                     = 10;
    const TP_LITERAL                        = 11;
    const TP_LDEL                           = 12;
    const TP_EQUAL                          = 13;
    const TP_DOLLAR                         = 14;
    const TP_ID                             = 15;
    const TP_PTR                            = 16;
    const TP_LDELIF                         = 17;
    const TP_LDELFOR                        = 18;
    const TP_SEMICOLON                      = 19;
    const TP_INCDEC                         = 20;
    const TP_TO                             = 21;
    const TP_STEP                           = 22;
    const TP_LDELFOREACH                    = 23;
    const TP_SPACE                          = 24;
    const TP_AS                             = 25;
    const TP_APTR                           = 26;
    const TP_LDELSETFILTER                  = 27;
    const TP_SMARTYBLOCKCHILDPARENT         = 28;
    const TP_LDELSLASH                      = 29;
    const TP_ATTR                           = 30;
    const TP_INTEGER                        = 31;
    const TP_COMMA                          = 32;
    const TP_OPENP                          = 33;
    const TP_CLOSEP                         = 34;
    const TP_MATH                           = 35;
    const TP_UNIMATH                        = 36;
    const TP_ANDSYM                         = 37;
    const TP_ISIN                           = 38;
    const TP_ISDIVBY                        = 39;
    const TP_ISNOTDIVBY                     = 40;
    const TP_ISEVEN                         = 41;
    const TP_ISNOTEVEN                      = 42;
    const TP_ISEVENBY                       = 43;
    const TP_ISNOTEVENBY                    = 44;
    const TP_ISODD                          = 45;
    const TP_ISNOTODD                       = 46;
    const TP_ISODDBY                        = 47;
    const TP_ISNOTODDBY                     = 48;
    const TP_INSTANCEOF                     = 49;
    const TP_QMARK                          = 50;
    const TP_NOT                            = 51;
    const TP_TYPECAST                       = 52;
    const TP_HEX                            = 53;
    const TP_DOT                            = 54;
    const TP_SINGLEQUOTESTRING              = 55;
    const TP_AT                             = 56;
    const TP_HATCH                          = 57;
    const TP_OPENB                          = 58;
    const TP_CLOSEB                         = 59;
    const TP_EQUALS                         = 60;
    const TP_NOTEQUALS                      = 61;
    const TP_GREATERTHAN                    = 62;
    const TP_LESSTHAN                       = 63;
    const TP_GREATEREQUAL                   = 64;
    const TP_LESSEQUAL                      = 65;
    const TP_IDENTITY                       = 66;
    const TP_NONEIDENTITY                   = 67;
    const TP_MOD                            = 68;
    const TP_LAND                           = 69;
    const TP_LOR                            = 70;
    const TP_LXOR                           = 71;
    const TP_QUOTE                          = 72;
    const TP_DOLLARID                       = 73;
    const YY_NO_ACTION = 511;
    const YY_ACCEPT_ACTION = 510;
    const YY_ERROR_ACTION = 509;

    const YY_SZ_ACTTAB = 2455;
static public $yy_action = array(
 /*     0 */   197,  183,  298,  177,   34,  278,  274,  275,  276,  281,
 /*    10 */   182,    2,  210,    9,   16,   28,   33,  273,    4,  104,
 /*    20 */   182,  288,  286,   39,  134,  186,   39,  186,  228,   14,
 /*    30 */   211,  197,   14,  350,   51,   46,   47,   43,   32,   41,
 /*    40 */   313,  310,   37,   42,  311,  254,   30,   29,  510,   93,
 /*    50 */   243,  209,  277,   16,   26,   38,  273,  122,  291,  312,
 /*    60 */   317,  318,  324,  325,  323,  322,  319,  320,  321,  309,
 /*    70 */   308,  197,  183,  163,  315,  154,   18,   16,   26,   48,
 /*    80 */   273,  217,  284,  262,  284,  125,   28,   33,   59,  225,
 /*    90 */   231,   22,   27,  246,   39,  285,  186,  150,  257,  297,
 /*   100 */    14,  128,  256,  269,  115,   51,   46,   47,   43,   32,
 /*   110 */    41,  313,  310,   37,   42,  311,  254,   30,   29,  197,
 /*   120 */   197,  213,  387,  197,    2,  381,  197,  279,  209,  277,
 /*   130 */   312,  317,  318,  324,  325,  323,  322,  319,  320,  321,
 /*   140 */   309,  308,   39,  387,  205,  206,   39,  300,   14,  387,
 /*   150 */   249,   19,   14,   51,   46,   47,   43,   32,   41,  313,
 /*   160 */   310,   37,   42,  311,  254,   30,   29,  197,   48,  197,
 /*   170 */   197,  344,  384,   36,   48,  118,  202,  175,  312,  317,
 /*   180 */   318,  324,  325,  323,  322,  319,  320,  321,  309,  308,
 /*   190 */   131,  280,   39,  384,   16,    7,  250,  273,   14,  384,
 /*   200 */   179,   51,   46,   47,   43,   32,   41,  313,  310,   37,
 /*   210 */    42,  311,  254,   30,   29,  197,  174,   48,   48,  197,
 /*   220 */    16,  387,  305,  273,  186,  247,  312,  317,  318,  324,
 /*   230 */   325,  323,  322,  319,  320,  321,  309,  308,  220,  218,
 /*   240 */   186,  272,  387,  119,  204,   22,  180,  303,  387,   51,
 /*   250 */    46,   47,   43,   32,   41,  313,  310,   37,   42,  311,
 /*   260 */   254,   30,   29,  197,  213,  248,   39,   48,  197,   22,
 /*   270 */    31,  326,   14,  197,  312,  317,  318,  324,  325,  323,
 /*   280 */   322,  319,  320,  321,  309,  308,  113,   16,   21,  197,
 /*   290 */   273,    3,  265,  266,   13,  238,  151,   51,   46,   47,
 /*   300 */    43,   32,   41,  313,  310,   37,   42,  311,  254,   30,
 /*   310 */    29,  197,   39,  302,  229,  201,   48,  287,   14,  289,
 /*   320 */   261,  212,  312,  317,  318,  324,  325,  323,  322,  319,
 /*   330 */   320,  321,  309,  308,  189,  189,  189,  314,    8,    8,
 /*   340 */     8,   16,  178,   40,  273,   51,   46,   47,   43,   32,
 /*   350 */    41,  313,  310,   37,   42,  311,  254,   30,   29,  101,
 /*   360 */   152,  227,   20,  197,   44,  207,  186,  151,   14,  284,
 /*   370 */   312,  317,  318,  324,  325,  323,  322,  319,  320,  321,
 /*   380 */   309,  308,  197,  186,  233,  217,  102,  158,  160,  125,
 /*   390 */   124,   16,   74,  225,  222,  170,  284,  284,  105,  307,
 /*   400 */   181,  169,  257,  297,  284,  189,  256,  269,  115,    8,
 /*   410 */   186,  185,  283,  192,  123,  285,   51,   46,   47,   43,
 /*   420 */    32,   41,  313,  310,   37,   42,  311,  254,   30,   29,
 /*   430 */   197,  167,  240,  129,   16,   16,   92,  215,  234,   98,
 /*   440 */   284,  312,  317,  318,  324,  325,  323,  322,  319,  320,
 /*   450 */   321,  309,  308,  270,  185,  169,   16,  263,  253,  200,
 /*   460 */    25,  233,  109,  184,   51,   46,   47,   43,   32,   41,
 /*   470 */   313,  310,   37,   42,  311,  254,   30,   29,  197,  231,
 /*   480 */   242,  244,  260,  138,   23,   24,  212,  212,  149,  312,
 /*   490 */   317,  318,  324,  325,  323,  322,  319,  320,  321,  309,
 /*   500 */   308,  165,  270,  258,  255,  262,  268,    2,  214,  264,
 /*   510 */   284,  235,   51,   46,   47,   43,   32,   41,  313,  310,
 /*   520 */    37,   42,  311,  254,   30,   29,  197,   35,  176,  133,
 /*   530 */     6,  239,  121,  116,  272,  147,  290,  312,  317,  318,
 /*   540 */   324,  325,  323,  322,  319,  320,  321,  309,  308,  270,
 /*   550 */   164,   13,  132,  173,   44,  236,  185,  267,   12,  284,
 /*   560 */    51,   46,   47,   43,   32,   41,  313,  310,   37,   42,
 /*   570 */   311,  254,   30,   29,  197,  159,  237,  241,  114,  285,
 /*   580 */   282,  103,  297,   95,  284,  312,  317,  318,  324,  325,
 /*   590 */   323,  322,  319,  320,  321,  309,  308,  270,  185,  208,
 /*   600 */   297,  297,  297,  297,  297,  297,  297,  297,   51,   46,
 /*   610 */    47,   43,   32,   41,  313,  310,   37,   42,  311,  254,
 /*   620 */    30,   29,  197,  156,  297,  297,  297,  297,  297,  297,
 /*   630 */   297,  148,  284,  312,  317,  318,  324,  325,  323,  322,
 /*   640 */   319,  320,  321,  309,  308,  270,  185,  297,  297,  297,
 /*   650 */   297,  297,  297,  297,  297,  251,   51,   46,   47,   43,
 /*   660 */    32,   41,  313,  310,   37,   42,  311,  254,   30,   29,
 /*   670 */   197,  171,  297,  297,  297,  297,  297,  297,  297,  161,
 /*   680 */   284,  312,  317,  318,  324,  325,  323,  322,  319,  320,
 /*   690 */   321,  309,  308,  270,  207,  297,  297,  297,  297,  297,
 /*   700 */   297,  297,  297,  297,   51,   46,   47,   43,   32,   41,
 /*   710 */   313,  310,   37,   42,  311,  254,   30,   29,  297,  297,
 /*   720 */   297,  297,  297,  297,  297,  297,  297,  297,  294,  312,
 /*   730 */   317,  318,  324,  325,  323,  322,  319,  320,  321,  309,
 /*   740 */   308,   51,   46,   47,   43,   32,   41,  313,  310,   37,
 /*   750 */    42,  311,  254,   30,   29,  297,  297,  297,  297,  297,
 /*   760 */   297,  297,  297,  297,  297,  297,  312,  317,  318,  324,
 /*   770 */   325,  323,  322,  319,  320,  321,  309,  308,  214,    9,
 /*   780 */   126,  130,   90,  217,    4,  104,  297,  141,  297,   15,
 /*   790 */   134,  225,  197,  285,  228,  295,  211,  100,  230,  169,
 /*   800 */    17,  316,  385,   50,  256,  269,  115,  226,  297,  297,
 /*   810 */   297,  270,  219,  297,  297,  297,   99,  162,   49,   45,
 /*   820 */   259,  232,  271,  385,  113,    1,  284,  146,  297,  385,
 /*   830 */   110,    9,    2,  135,  190,   16,    4,  104,  273,   94,
 /*   840 */   186,  270,  134,   96,  270,  297,  228,   39,  211,  221,
 /*   850 */   230,   16,   17,   14,  273,   50,  297,  270,  296,  297,
 /*   860 */   297,  297,  297,   39,  297,  223,  297,  297,   18,   14,
 /*   870 */    49,   45,  259,  232,  271,  262,  113,    1,  252,  297,
 /*   880 */   197,  166,  354,    9,  297,  135,  224,  297,    4,  104,
 /*   890 */   284,   94,  297,  297,  134,  203,  297,  155,  228,  297,
 /*   900 */   211,  285,  230,   39,   17,  297,  284,   50,  297,   14,
 /*   910 */   297,  297,    2,  297,  297,  297,  297,  285,  297,  297,
 /*   920 */   297,  297,   49,   45,  259,  232,  271,  297,  113,    1,
 /*   930 */   297,  297,  297,  297,  297,    9,  297,  119,  224,  297,
 /*   940 */     4,  104,  297,   94,  297,  297,  134,  297,  297,  297,
 /*   950 */   228,  297,  211,  297,  230,  297,   11,  297,  297,   50,
 /*   960 */   297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
 /*   970 */   297,  297,  297,  297,   49,   45,  259,  232,  271,  297,
 /*   980 */   113,    1,  297,  297,  297,  297,  297,    9,  297,  135,
 /*   990 */   188,  297,    4,  104,  297,   94,  297,  297,  134,  297,
 /*  1000 */   297,  297,  228,  297,  211,  297,  196,  297,   17,  297,
 /*  1010 */   297,   50,  297,  297,  297,  297,  297,  297,  297,  297,
 /*  1020 */   297,  297,  297,  297,  297,  297,   49,   45,  259,  232,
 /*  1030 */   271,  297,  113,    1,  297,  297,  297,  297,  297,    9,
 /*  1040 */   297,  127,  224,  297,    4,  104,  297,   94,  297,  297,
 /*  1050 */   134,  297,  297,  297,  228,  297,  211,  297,  230,  297,
 /*  1060 */    17,  297,  297,   50,  297,  297,  297,  297,  297,  297,
 /*  1070 */   297,  297,  297,  297,  297,  297,  297,  297,   49,   45,
 /*  1080 */   259,  232,  271,  297,  113,    1,  297,  297,  297,  297,
 /*  1090 */   297,    9,  297,  135,  187,  297,    4,  104,  297,   94,
 /*  1100 */   297,  297,  134,  297,  297,  297,  228,  297,  211,  297,
 /*  1110 */   230,  297,   17,  297,  297,   50,  297,  297,  297,  297,
 /*  1120 */   297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
 /*  1130 */    49,   45,  259,  232,  271,  297,  113,    1,  297,  297,
 /*  1140 */   297,  297,  297,    9,  297,  117,  224,  297,    4,  104,
 /*  1150 */   297,   94,  297,  297,  134,  297,  297,  297,  228,  297,
 /*  1160 */   211,  297,  230,  297,    5,  297,  297,   50,  297,  297,
 /*  1170 */   297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
 /*  1180 */   297,  297,   49,   45,  259,  232,  271,  297,  113,    1,
 /*  1190 */   297,  297,  297,  297,  297,    9,  297,  135,  195,  297,
 /*  1200 */     4,  104,  297,   94,  297,  297,  134,  297,  297,  297,
 /*  1210 */   228,  297,  211,  297,  230,  297,   17,  297,  297,   50,
 /*  1220 */   297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
 /*  1230 */   297,  297,  297,  297,   49,   45,  259,  232,  271,  297,
 /*  1240 */   113,    1,  297,  297,  297,  297,  297,    9,  297,  119,
 /*  1250 */   224,  297,    4,  104,  297,   94,  297,  297,  134,  297,
 /*  1260 */   297,  297,  228,  297,  211,  297,  230,  297,   11,   97,
 /*  1270 */   153,   50,  297,  297,  297,  297,  297,  297,  297,  284,
 /*  1280 */   297,  297,  297,   28,   33,  297,   49,   45,  259,  232,
 /*  1290 */   271,  297,  113,  186,  297,  297,  297,  297,  297,    9,
 /*  1300 */   297,  119,  216,  297,    4,  104,  430,   94,  297,  297,
 /*  1310 */   134,  297,  297,  297,  228,  297,  211,  297,  230,  297,
 /*  1320 */    11,  297,  430,   50,  430,  430,  297,  430,  430,  297,
 /*  1330 */   297,  297,  297,  430,  297,  430,    2,  430,   49,   45,
 /*  1340 */   259,  232,  271,  297,  113,  297,  297,  217,  297,  297,
 /*  1350 */   297,  112,  430,  297,   70,  225,  297,  297,  297,   94,
 /*  1360 */   297,  297,  430,  169,  257,  297,  297,  217,  256,  269,
 /*  1370 */   115,  125,  297,  297,   74,  225,  297,  297,  198,  301,
 /*  1380 */   297,  297,  297,  169,  257,  297,  297,  297,  256,  269,
 /*  1390 */   115,  297,  297,  217,  297,  194,  297,  112,  297,  297,
 /*  1400 */    70,  225,  297,  297,  297,  297,  297,  183,  168,  169,
 /*  1410 */   257,  297,  297,  297,  256,  269,  115,  284,  297,  217,
 /*  1420 */   297,   28,   33,  125,  297,  304,   74,  225,  297,  297,
 /*  1430 */   297,  186,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  1440 */   256,  269,  115,  297,  217,  297,  297,  193,  125,  297,
 /*  1450 */   297,   54,  225,  120,  297,  297,  297,  297,  297,  297,
 /*  1460 */   150,  257,  297,  297,  217,  256,  269,  115,  125,  297,
 /*  1470 */   297,   58,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1480 */   169,  257,  297,  297,  297,  256,  269,  115,  217,  297,
 /*  1490 */   297,  297,  125,  297,  297,   73,  225,  297,  297,  297,
 /*  1500 */   297,  297,  297,  297,  169,  257,  297,  297,  297,  256,
 /*  1510 */   269,  115,  297,  297,  217,  297,  297,  297,  111,  297,
 /*  1520 */   297,   55,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1530 */   169,  257,  297,  297,  297,  256,  269,  115,  297,  217,
 /*  1540 */   297,  297,  297,  125,  297,  297,   69,  225,  297,  297,
 /*  1550 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  217,
 /*  1560 */   256,  269,  115,  125,  297,  297,   67,  225,  297,  297,
 /*  1570 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  1580 */   256,  269,  115,  217,  297,  297,  297,  125,  297,  297,
 /*  1590 */    59,  225,  297,  297,  297,  297,  297,  297,  297,  169,
 /*  1600 */   257,  297,  297,  297,  256,  269,  115,  297,  297,  217,
 /*  1610 */   297,  297,  297,  125,  297,  297,   68,  225,  297,  297,
 /*  1620 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  1630 */   256,  269,  115,  297,  217,  297,  297,  297,  108,  297,
 /*  1640 */   297,   75,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1650 */   169,  257,  297,  297,  217,  256,  269,  115,   91,  297,
 /*  1660 */   297,   53,  191,  297,  297,  297,  297,  297,  297,  297,
 /*  1670 */   169,  257,  297,  297,  297,  256,  269,  115,  217,  297,
 /*  1680 */   297,  297,  125,  297,  297,   86,  225,  297,  297,  297,
 /*  1690 */   297,  297,  297,  297,  169,  257,  297,  297,  297,  256,
 /*  1700 */   269,  115,  297,  297,  217,  297,  297,  297,  125,  297,
 /*  1710 */   297,   52,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1720 */   169,  257,  297,  297,  297,  256,  269,  115,  297,  217,
 /*  1730 */   297,  297,  297,  125,  297,  297,   88,  225,  297,  297,
 /*  1740 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  217,
 /*  1750 */   256,  269,  115,  125,  297,  297,   89,  225,  297,  297,
 /*  1760 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  1770 */   256,  269,  115,  217,  297,  297,  297,  125,  297,  297,
 /*  1780 */    87,  225,  297,  297,  297,  297,  297,  297,  297,  169,
 /*  1790 */   257,  297,  297,  297,  256,  269,  115,  297,  297,  217,
 /*  1800 */   297,  297,  297,  125,  297,  297,   61,  225,  297,  297,
 /*  1810 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  1820 */   256,  269,  115,  297,  217,  297,  297,  297,  125,  297,
 /*  1830 */   297,   72,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1840 */   169,  257,  297,  297,  217,  256,  269,  115,  125,  297,
 /*  1850 */   297,   80,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1860 */   169,  257,  297,  297,  297,  256,  269,  115,  217,  297,
 /*  1870 */   297,  297,  125,  297,  297,   57,  225,  297,  297,  297,
 /*  1880 */   297,  297,  297,  297,  169,  257,  297,  297,  297,  256,
 /*  1890 */   269,  115,  297,  297,  217,  297,  297,  297,  125,  297,
 /*  1900 */   297,   76,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  1910 */   169,  257,  297,  297,  297,  256,  269,  115,  297,  217,
 /*  1920 */   297,  297,  297,  125,  297,  297,   81,  225,  297,  297,
 /*  1930 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  217,
 /*  1940 */   256,  269,  115,  125,  297,  297,   62,  225,  297,  297,
 /*  1950 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  1960 */   256,  269,  115,  217,  297,  297,  297,  125,  297,  297,
 /*  1970 */    78,  225,  297,  297,  297,  297,  297,  297,  297,  169,
 /*  1980 */   257,  297,  297,  297,  256,  269,  115,  297,  297,  217,
 /*  1990 */   297,  297,  297,  125,  297,  297,   60,  225,  297,  297,
 /*  2000 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  2010 */   256,  269,  115,  297,  217,  297,  297,  297,  125,  297,
 /*  2020 */   297,   66,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  2030 */   169,  257,  297,  297,  217,  256,  269,  115,  125,  297,
 /*  2040 */   297,   82,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  2050 */   169,  257,  297,  297,  297,  256,  269,  115,  217,  297,
 /*  2060 */   297,  297,  106,  297,  297,   64,  225,  297,  297,  297,
 /*  2070 */   297,  297,  297,  297,  169,  257,  297,  297,  297,  256,
 /*  2080 */   269,  115,  297,  297,  217,  297,  297,  297,   91,  297,
 /*  2090 */   297,   56,  199,  297,  297,  297,  297,  297,  297,  297,
 /*  2100 */   169,  257,  297,  297,  297,  256,  269,  115,  297,  217,
 /*  2110 */   297,  297,  297,  125,  297,  297,   65,  225,  297,  297,
 /*  2120 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  217,
 /*  2130 */   256,  269,  115,  125,  297,  297,   63,  225,  297,  297,
 /*  2140 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  2150 */   256,  269,  115,  217,  297,  297,  297,  125,  297,  297,
 /*  2160 */    84,  225,  297,  297,  297,  297,  297,  297,  297,  169,
 /*  2170 */   257,  297,  297,  297,  256,  269,  115,  297,  297,  217,
 /*  2180 */   297,  297,  297,  125,  297,  297,   79,  225,  297,  297,
 /*  2190 */   297,  297,  297,  297,  297,  169,  257,  297,  297,  297,
 /*  2200 */   256,  269,  115,  297,  217,  297,  297,  297,  107,  297,
 /*  2210 */   297,   71,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  2220 */   169,  257,  297,  297,  217,  256,  269,  115,  125,  297,
 /*  2230 */   297,   85,  225,  297,  297,  297,  297,  297,  297,  297,
 /*  2240 */   169,  257,  297,  297,  297,  256,  269,  115,  217,  297,
 /*  2250 */   297,  297,  125,  297,  297,   77,  225,  297,  297,  297,
 /*  2260 */   297,  297,  297,  297,  169,  257,  297,  297,  297,  256,
 /*  2270 */   269,  115,  297,  297,  217,  297,  306,  297,  125,  297,
 /*  2280 */   297,   83,  225,   10,  297,  297,  297,  297,    4,  104,
 /*  2290 */   169,  257,  297,  297,  134,  256,  269,  115,  228,  217,
 /*  2300 */   211,  306,  297,  145,  297,  297,  297,  225,   10,  297,
 /*  2310 */   297,  297,  297,    4,  104,  169,  297,  245,  297,  134,
 /*  2320 */   256,  269,  115,  228,  217,  211,  297,  297,  139,  297,
 /*  2330 */   297,  297,  225,  297,  217,  297,  297,  297,  142,  297,
 /*  2340 */   169,  297,  225,  292,  299,  256,  269,  115,  297,  297,
 /*  2350 */   169,  297,  297,  297,  297,  256,  269,  115,  297,  297,
 /*  2360 */   297,  297,  217,  297,  297,  297,  137,  297,  293,  299,
 /*  2370 */   225,  217,  297,  297,  297,  136,  297,  297,  169,  225,
 /*  2380 */   297,  297,  217,  256,  269,  115,  143,  169,  297,  297,
 /*  2390 */   225,  297,  256,  269,  115,  297,  297,  297,  169,  297,
 /*  2400 */   297,  297,  217,  256,  269,  115,  144,  297,  297,  297,
 /*  2410 */   225,  217,  297,  297,  297,  140,  297,  297,  169,  225,
 /*  2420 */   297,  297,  297,  256,  269,  115,  297,  169,  183,  157,
 /*  2430 */   183,  172,  256,  269,  115,  297,  297,  297,  284,  297,
 /*  2440 */   284,  297,   28,   33,   28,   33,  297,  297,  297,  297,
 /*  2450 */   297,  297,  186,  297,  186,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   83,    3,   83,   26,    4,    5,    6,    7,    8,
 /*    10 */     9,   33,   15,   12,   12,   97,   98,   15,   17,   18,
 /*    20 */     9,   10,   11,   24,   23,  107,   24,  107,   27,   30,
 /*    30 */    29,    1,   30,    3,   35,   36,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   75,   76,
 /*    50 */    77,   78,   79,   12,   13,   12,   15,   14,   15,   60,
 /*    60 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,    1,   83,   84,   31,   84,   13,   12,   13,   49,
 /*    80 */    15,   78,   93,   20,   93,   82,   97,   98,   85,   86,
 /*    90 */    87,   32,   22,   34,   24,  104,  107,   94,   95,   96,
 /*   100 */    30,   14,   99,  100,  101,   35,   36,   37,   38,   39,
 /*   110 */    40,   41,   42,   43,   44,   45,   46,   47,   48,    1,
 /*   120 */     1,   56,    3,    1,   33,    3,    1,   77,   78,   79,
 /*   130 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   140 */    70,   71,   24,   24,   25,   54,   24,    3,   30,   30,
 /*   150 */    59,   26,   30,   35,   36,   37,   38,   39,   40,   41,
 /*   160 */    42,   43,   44,   45,   46,   47,   48,    1,   49,    1,
 /*   170 */     1,    3,    3,   12,   49,   14,   15,   19,   60,   61,
 /*   180 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   190 */    32,    3,   24,   24,   12,   32,   59,   15,   30,   30,
 /*   200 */    83,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   210 */    44,   45,   46,   47,   48,    1,   83,   49,   49,    1,
 /*   220 */    12,    3,   59,   15,  107,   59,   60,   61,   62,   63,
 /*   230 */    64,   65,   66,   67,   68,   69,   70,   71,   56,   25,
 /*   240 */   107,  108,   24,   14,   15,   32,   92,   34,   30,   35,
 /*   250 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   260 */    46,   47,   48,    1,   56,    3,   24,   49,    1,   32,
 /*   270 */    12,   34,   30,    1,   60,   61,   62,   63,   64,   65,
 /*   280 */    66,   67,   68,   69,   70,   71,   57,   12,   13,    1,
 /*   290 */    15,   33,  102,  103,   13,   20,   16,   35,   36,   37,
 /*   300 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   310 */    48,    1,   24,    3,   87,   88,   49,   79,   30,   81,
 /*   320 */    15,   94,   60,   61,   62,   63,   64,   65,   66,   67,
 /*   330 */    68,   69,   70,   71,   54,   54,   54,   57,   58,   58,
 /*   340 */    58,   12,   83,   13,   15,   35,   36,   37,   38,   39,
 /*   350 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   83,
 /*   360 */    84,   56,   24,    1,    2,   78,  107,   16,   30,   93,
 /*   370 */    60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   380 */    70,   71,    1,  107,   54,   78,   83,   84,   84,   82,
 /*   390 */    14,   12,   85,   86,   15,   84,   93,   93,  111,  112,
 /*   400 */    19,   94,   95,   96,   93,   54,   99,  100,  101,   58,
 /*   410 */   107,  107,   93,  106,   14,  104,   35,   36,   37,   38,
 /*   420 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   430 */     1,   84,    3,   33,   12,   12,   15,   15,   15,   90,
 /*   440 */    93,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   450 */    69,   70,   71,  104,  107,   94,   12,   15,   57,   15,
 /*   460 */    21,   54,  101,   15,   35,   36,   37,   38,   39,   40,
 /*   470 */    41,   42,   43,   44,   45,   46,   47,   48,    1,   87,
 /*   480 */    87,   34,   15,   15,   50,    2,   94,   94,   90,   60,
 /*   490 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   500 */    71,   84,  104,   31,   31,   20,    3,   33,    2,   15,
 /*   510 */    93,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*   520 */    43,   44,   45,   46,   47,   48,    1,    2,   92,   14,
 /*   530 */    33,   15,   14,   14,  108,   90,   15,   60,   61,   62,
 /*   540 */    63,   64,   65,   66,   67,   68,   69,   70,   71,  104,
 /*   550 */    84,   13,   15,  102,    2,  105,  107,  102,   89,   93,
 /*   560 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*   570 */    45,   46,   47,   48,    1,   84,    3,   24,   80,  104,
 /*   580 */    10,   92,  113,   90,   93,   60,   61,   62,   63,   64,
 /*   590 */    65,   66,   67,   68,   69,   70,   71,  104,  107,   89,
 /*   600 */   113,  113,  113,  113,  113,  113,  113,  113,   35,   36,
 /*   610 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   620 */    47,   48,    1,   84,  113,  113,  113,  113,  113,  113,
 /*   630 */   113,   90,   93,   60,   61,   62,   63,   64,   65,   66,
 /*   640 */    67,   68,   69,   70,   71,  104,  107,  113,  113,  113,
 /*   650 */   113,  113,  113,  113,  113,   34,   35,   36,   37,   38,
 /*   660 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   670 */     1,   84,  113,  113,  113,  113,  113,  113,  113,   90,
 /*   680 */    93,   60,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   690 */    69,   70,   71,  104,   78,  113,  113,  113,  113,  113,
 /*   700 */   113,  113,  113,  113,   35,   36,   37,   38,   39,   40,
 /*   710 */    41,   42,   43,   44,   45,   46,   47,   48,  113,  113,
 /*   720 */   113,  113,  113,  113,  113,  113,  113,  113,  112,   60,
 /*   730 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*   740 */    71,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   750 */    44,   45,   46,   47,   48,  113,  113,  113,  113,  113,
 /*   760 */   113,  113,  113,  113,  113,  113,   60,   61,   62,   63,
 /*   770 */    64,   65,   66,   67,   68,   69,   70,   71,    2,   12,
 /*   780 */    91,   14,   15,   78,   17,   18,  113,   82,  113,   13,
 /*   790 */    23,   86,    1,  104,   27,   28,   29,   90,   31,   94,
 /*   800 */    33,   96,    3,   36,   99,  100,  101,   16,  113,  113,
 /*   810 */   113,  104,   13,  113,  113,  113,   83,   84,   51,   52,
 /*   820 */    53,   54,   55,   24,   57,   58,   93,   90,  113,   30,
 /*   830 */    90,   12,   33,   14,   15,   12,   17,   18,   15,   72,
 /*   840 */   107,  104,   23,   90,  104,  113,   27,   24,   29,   26,
 /*   850 */    31,   12,   33,   30,   15,   36,  113,  104,    3,  113,
 /*   860 */   113,  113,  113,   24,  113,   26,  113,  113,   13,   30,
 /*   870 */    51,   52,   53,   54,   55,   20,   57,   58,   59,  113,
 /*   880 */     1,   84,    3,   12,  113,   14,   15,  113,   17,   18,
 /*   890 */    93,   72,  113,  113,   23,   16,  113,   84,   27,  113,
 /*   900 */    29,  104,   31,   24,   33,  113,   93,   36,  113,   30,
 /*   910 */   113,  113,   33,  113,  113,  113,  113,  104,  113,  113,
 /*   920 */   113,  113,   51,   52,   53,   54,   55,  113,   57,   58,
 /*   930 */   113,  113,  113,  113,  113,   12,  113,   14,   15,  113,
 /*   940 */    17,   18,  113,   72,  113,  113,   23,  113,  113,  113,
 /*   950 */    27,  113,   29,  113,   31,  113,   33,  113,  113,   36,
 /*   960 */   113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
 /*   970 */   113,  113,  113,  113,   51,   52,   53,   54,   55,  113,
 /*   980 */    57,   58,  113,  113,  113,  113,  113,   12,  113,   14,
 /*   990 */    15,  113,   17,   18,  113,   72,  113,  113,   23,  113,
 /*  1000 */   113,  113,   27,  113,   29,  113,   31,  113,   33,  113,
 /*  1010 */   113,   36,  113,  113,  113,  113,  113,  113,  113,  113,
 /*  1020 */   113,  113,  113,  113,  113,  113,   51,   52,   53,   54,
 /*  1030 */    55,  113,   57,   58,  113,  113,  113,  113,  113,   12,
 /*  1040 */   113,   14,   15,  113,   17,   18,  113,   72,  113,  113,
 /*  1050 */    23,  113,  113,  113,   27,  113,   29,  113,   31,  113,
 /*  1060 */    33,  113,  113,   36,  113,  113,  113,  113,  113,  113,
 /*  1070 */   113,  113,  113,  113,  113,  113,  113,  113,   51,   52,
 /*  1080 */    53,   54,   55,  113,   57,   58,  113,  113,  113,  113,
 /*  1090 */   113,   12,  113,   14,   15,  113,   17,   18,  113,   72,
 /*  1100 */   113,  113,   23,  113,  113,  113,   27,  113,   29,  113,
 /*  1110 */    31,  113,   33,  113,  113,   36,  113,  113,  113,  113,
 /*  1120 */   113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
 /*  1130 */    51,   52,   53,   54,   55,  113,   57,   58,  113,  113,
 /*  1140 */   113,  113,  113,   12,  113,   14,   15,  113,   17,   18,
 /*  1150 */   113,   72,  113,  113,   23,  113,  113,  113,   27,  113,
 /*  1160 */    29,  113,   31,  113,   33,  113,  113,   36,  113,  113,
 /*  1170 */   113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
 /*  1180 */   113,  113,   51,   52,   53,   54,   55,  113,   57,   58,
 /*  1190 */   113,  113,  113,  113,  113,   12,  113,   14,   15,  113,
 /*  1200 */    17,   18,  113,   72,  113,  113,   23,  113,  113,  113,
 /*  1210 */    27,  113,   29,  113,   31,  113,   33,  113,  113,   36,
 /*  1220 */   113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
 /*  1230 */   113,  113,  113,  113,   51,   52,   53,   54,   55,  113,
 /*  1240 */    57,   58,  113,  113,  113,  113,  113,   12,  113,   14,
 /*  1250 */    15,  113,   17,   18,  113,   72,  113,  113,   23,  113,
 /*  1260 */   113,  113,   27,  113,   29,  113,   31,  113,   33,   83,
 /*  1270 */    84,   36,  113,  113,  113,  113,  113,  113,  113,   93,
 /*  1280 */   113,  113,  113,   97,   98,  113,   51,   52,   53,   54,
 /*  1290 */    55,  113,   57,  107,  113,  113,  113,  113,  113,   12,
 /*  1300 */   113,   14,   15,  113,   17,   18,    3,   72,  113,  113,
 /*  1310 */    23,  113,  113,  113,   27,  113,   29,  113,   31,  113,
 /*  1320 */    33,  113,   19,   36,   21,   22,  113,   24,   25,  113,
 /*  1330 */   113,  113,  113,   30,  113,   32,   33,   34,   51,   52,
 /*  1340 */    53,   54,   55,  113,   57,  113,  113,   78,  113,  113,
 /*  1350 */   113,   82,   49,  113,   85,   86,  113,  113,  113,   72,
 /*  1360 */   113,  113,   59,   94,   95,   96,  113,   78,   99,  100,
 /*  1370 */   101,   82,  113,  113,   85,   86,  113,  113,  109,  110,
 /*  1380 */   113,  113,  113,   94,   95,   96,  113,  113,   99,  100,
 /*  1390 */   101,  113,  113,   78,  113,  106,  113,   82,  113,  113,
 /*  1400 */    85,   86,  113,  113,  113,  113,  113,   83,   84,   94,
 /*  1410 */    95,   96,  113,  113,   99,  100,  101,   93,  113,   78,
 /*  1420 */   113,   97,   98,   82,  113,  110,   85,   86,  113,  113,
 /*  1430 */   113,  107,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  1440 */    99,  100,  101,  113,   78,  113,  113,  106,   82,  113,
 /*  1450 */   113,   85,   86,   87,  113,  113,  113,  113,  113,  113,
 /*  1460 */    94,   95,   96,  113,   78,   99,  100,  101,   82,  113,
 /*  1470 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1480 */    94,   95,   96,  113,  113,   99,  100,  101,   78,  113,
 /*  1490 */   113,  113,   82,  113,  113,   85,   86,  113,  113,  113,
 /*  1500 */   113,  113,  113,  113,   94,   95,   96,  113,  113,   99,
 /*  1510 */   100,  101,  113,  113,   78,  113,  113,  113,   82,  113,
 /*  1520 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1530 */    94,   95,   96,  113,  113,   99,  100,  101,  113,   78,
 /*  1540 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  1550 */   113,  113,  113,  113,  113,   94,   95,   96,  113,   78,
 /*  1560 */    99,  100,  101,   82,  113,  113,   85,   86,  113,  113,
 /*  1570 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  1580 */    99,  100,  101,   78,  113,  113,  113,   82,  113,  113,
 /*  1590 */    85,   86,  113,  113,  113,  113,  113,  113,  113,   94,
 /*  1600 */    95,   96,  113,  113,   99,  100,  101,  113,  113,   78,
 /*  1610 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  1620 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  1630 */    99,  100,  101,  113,   78,  113,  113,  113,   82,  113,
 /*  1640 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1650 */    94,   95,   96,  113,   78,   99,  100,  101,   82,  113,
 /*  1660 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1670 */    94,   95,   96,  113,  113,   99,  100,  101,   78,  113,
 /*  1680 */   113,  113,   82,  113,  113,   85,   86,  113,  113,  113,
 /*  1690 */   113,  113,  113,  113,   94,   95,   96,  113,  113,   99,
 /*  1700 */   100,  101,  113,  113,   78,  113,  113,  113,   82,  113,
 /*  1710 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1720 */    94,   95,   96,  113,  113,   99,  100,  101,  113,   78,
 /*  1730 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  1740 */   113,  113,  113,  113,  113,   94,   95,   96,  113,   78,
 /*  1750 */    99,  100,  101,   82,  113,  113,   85,   86,  113,  113,
 /*  1760 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  1770 */    99,  100,  101,   78,  113,  113,  113,   82,  113,  113,
 /*  1780 */    85,   86,  113,  113,  113,  113,  113,  113,  113,   94,
 /*  1790 */    95,   96,  113,  113,   99,  100,  101,  113,  113,   78,
 /*  1800 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  1810 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  1820 */    99,  100,  101,  113,   78,  113,  113,  113,   82,  113,
 /*  1830 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1840 */    94,   95,   96,  113,   78,   99,  100,  101,   82,  113,
 /*  1850 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1860 */    94,   95,   96,  113,  113,   99,  100,  101,   78,  113,
 /*  1870 */   113,  113,   82,  113,  113,   85,   86,  113,  113,  113,
 /*  1880 */   113,  113,  113,  113,   94,   95,   96,  113,  113,   99,
 /*  1890 */   100,  101,  113,  113,   78,  113,  113,  113,   82,  113,
 /*  1900 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  1910 */    94,   95,   96,  113,  113,   99,  100,  101,  113,   78,
 /*  1920 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  1930 */   113,  113,  113,  113,  113,   94,   95,   96,  113,   78,
 /*  1940 */    99,  100,  101,   82,  113,  113,   85,   86,  113,  113,
 /*  1950 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  1960 */    99,  100,  101,   78,  113,  113,  113,   82,  113,  113,
 /*  1970 */    85,   86,  113,  113,  113,  113,  113,  113,  113,   94,
 /*  1980 */    95,   96,  113,  113,   99,  100,  101,  113,  113,   78,
 /*  1990 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  2000 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  2010 */    99,  100,  101,  113,   78,  113,  113,  113,   82,  113,
 /*  2020 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  2030 */    94,   95,   96,  113,   78,   99,  100,  101,   82,  113,
 /*  2040 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  2050 */    94,   95,   96,  113,  113,   99,  100,  101,   78,  113,
 /*  2060 */   113,  113,   82,  113,  113,   85,   86,  113,  113,  113,
 /*  2070 */   113,  113,  113,  113,   94,   95,   96,  113,  113,   99,
 /*  2080 */   100,  101,  113,  113,   78,  113,  113,  113,   82,  113,
 /*  2090 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  2100 */    94,   95,   96,  113,  113,   99,  100,  101,  113,   78,
 /*  2110 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  2120 */   113,  113,  113,  113,  113,   94,   95,   96,  113,   78,
 /*  2130 */    99,  100,  101,   82,  113,  113,   85,   86,  113,  113,
 /*  2140 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  2150 */    99,  100,  101,   78,  113,  113,  113,   82,  113,  113,
 /*  2160 */    85,   86,  113,  113,  113,  113,  113,  113,  113,   94,
 /*  2170 */    95,   96,  113,  113,   99,  100,  101,  113,  113,   78,
 /*  2180 */   113,  113,  113,   82,  113,  113,   85,   86,  113,  113,
 /*  2190 */   113,  113,  113,  113,  113,   94,   95,   96,  113,  113,
 /*  2200 */    99,  100,  101,  113,   78,  113,  113,  113,   82,  113,
 /*  2210 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  2220 */    94,   95,   96,  113,   78,   99,  100,  101,   82,  113,
 /*  2230 */   113,   85,   86,  113,  113,  113,  113,  113,  113,  113,
 /*  2240 */    94,   95,   96,  113,  113,   99,  100,  101,   78,  113,
 /*  2250 */   113,  113,   82,  113,  113,   85,   86,  113,  113,  113,
 /*  2260 */   113,  113,  113,  113,   94,   95,   96,  113,  113,   99,
 /*  2270 */   100,  101,  113,  113,   78,  113,    5,  113,   82,  113,
 /*  2280 */   113,   85,   86,   12,  113,  113,  113,  113,   17,   18,
 /*  2290 */    94,   95,   96,  113,   23,   99,  100,  101,   27,   78,
 /*  2300 */    29,    5,  113,   82,  113,  113,  113,   86,   12,  113,
 /*  2310 */   113,  113,  113,   17,   18,   94,  113,   96,  113,   23,
 /*  2320 */    99,  100,  101,   27,   78,   29,  113,  113,   82,  113,
 /*  2330 */   113,  113,   86,  113,   78,  113,  113,  113,   82,  113,
 /*  2340 */    94,  113,   86,   72,   73,   99,  100,  101,  113,  113,
 /*  2350 */    94,  113,  113,  113,  113,   99,  100,  101,  113,  113,
 /*  2360 */   113,  113,   78,  113,  113,  113,   82,  113,   72,   73,
 /*  2370 */    86,   78,  113,  113,  113,   82,  113,  113,   94,   86,
 /*  2380 */   113,  113,   78,   99,  100,  101,   82,   94,  113,  113,
 /*  2390 */    86,  113,   99,  100,  101,  113,  113,  113,   94,  113,
 /*  2400 */   113,  113,   78,   99,  100,  101,   82,  113,  113,  113,
 /*  2410 */    86,   78,  113,  113,  113,   82,  113,  113,   94,   86,
 /*  2420 */   113,  113,  113,   99,  100,  101,  113,   94,   83,   84,
 /*  2430 */    83,   84,   99,  100,  101,  113,  113,  113,   93,  113,
 /*  2440 */    93,  113,   97,   98,   97,   98,  113,  113,  113,  113,
 /*  2450 */   113,  113,  107,  113,  107,
);
    const YY_SHIFT_USE_DFLT = -23;
    const YY_SHIFT_MAX = 235;
    static public $yy_shift_ofst = array(
 /*     0 */     1, 1183,  871,  871, 1131, 1131,  871, 1183,  819,  767,
 /*    10 */   767,  871,  871,  871,  871,  871,  871,  871,  871,  871,
 /*    20 */   975,  871,  871, 1027, 1079,  871,  871,  871,  871,  871,
 /*    30 */   871,  871,  871,  871,  871,  871,  871,  871,  871,  975,
 /*    40 */   871,  871,  871,  923,  923, 1235, 1235, 1235, 1287, 1235,
 /*    50 */  1235, 1235,   70,   -1,  118,  118,  118,  118,  381,  477,
 /*    60 */   525,  573,  310,  166,  214,  621,  262,  429,  669,  669,
 /*    70 */   669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
 /*    80 */   669,  669,  669,  669,  669,  669,  669,  669,  706,  706,
 /*    90 */   879,  168,  288,    1, 2271,  839,  823,  122,    2,  122,
 /*   100 */     2,  288,  288,  362,  400, 2296,  119,  218,  169,  280,
 /*   110 */   275,   30,  125,  229,   11,  351,  329,  422,  379,  329,
 /*   120 */   242,  329,  329,  329,  329,  267,  242,  423,  329,  400,
 /*   130 */   444,  400,  791,  329,  338,  422,  272,  272,  272,  272,
 /*   140 */   272,  272,  272,  272,  272,  -23,   65,  182,   41,  208,
 /*   150 */   281,  161,  242,  242,  242,  242,  242,  242,  242,  242,
 /*   160 */   242,  329,  242,  242,  242,  242,  242,  242,  242,  282,
 /*   170 */   242,  242,  242,  282,  272,  553,  552,  272,  272,  272,
 /*   180 */   552,  553,  570,  272,  -23,  -23,  -23, 1303,  799,   43,
 /*   190 */    91,  855,  237,  213,   59,  -22,  330,  305,  163,   63,
 /*   200 */   776,  158,  258,  421,  401,  376,   -3,  144,   87,  188,
 /*   210 */   137,  537,  538,  494,  442,  506,  474,  503,  515,  516,
 /*   220 */   521,  519,  497,  518,  474,  485,  468,  467,  448,  439,
 /*   230 */   407,  447,  473,  472,  483,  434,
);
    const YY_REDUCE_USE_DFLT = -83;
    const YY_REDUCE_MAX = 186;
    static public $yy_reduce_ofst = array(
 /*     0 */   -27, 1269, 1289, 1341, 1366,    3,  307, 1315, 2051, 2006,
 /*    10 */  1576, 2031, 1386, 1410, 1556, 1436, 1481, 1505, 1531, 1956,
 /*    20 */  1980, 2146, 2101, 1911, 1671, 1626, 1885, 1790, 1461, 1816,
 /*    30 */  1841, 1861, 1766, 1746, 1600, 1651, 1721, 1695, 1936, 2126,
 /*    40 */  2170, 2196, 2075,  705, 2221, 2284, 2256, 2293, 2304, 2333,
 /*    50 */  2246, 2324, 2347, 1186, 1324, 2345, 1186,  -11,  -82,  -82,
 /*    60 */   -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
 /*    70 */   -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
 /*    80 */   -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
 /*    90 */   303,  733,  276,   50,  287,  797,   -9,  304,  311,  347,
 /*   100 */   813,  539,  491,  133,  227,  616,  -80,  -80,  -80,  190,
 /*   110 */   689,  -80,  -80,  361,  238,  190,  707,  737,  589,  398,
 /*   120 */   417,  349,  445,  541,  493,  -80,  466,  398,  740,  392,
 /*   130 */   398,  393,  259,  753,  587,  398,  -80,  -80,  117,  -80,
 /*   140 */   -80,  -80,  -80,  -80,  -80,  -80,  475,  475,  475,  475,
 /*   150 */   451,  450,  319,  319,  319,  319,  319,  319,  319,  319,
 /*   160 */   319,  475,  319,  319,  319,  319,  319,  319,  319,  451,
 /*   170 */   319,  319,  319,  455,  449,  469,  426,  449,  449,  449,
 /*   180 */   426,  510,  498,  449,  489,  436,  154,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(4, 5, 6, 7, 8, 9, 12, 17, 18, 23, 27, 29, ),
        /* 1 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 2 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 3 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 4 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 5 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 6 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 7 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 8 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 59, 72, ),
        /* 9 */ array(12, 14, 15, 17, 18, 23, 27, 28, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 10 */ array(12, 14, 15, 17, 18, 23, 27, 28, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 11 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 12 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 13 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 14 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 15 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 16 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 17 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 18 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 19 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 20 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 21 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 22 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 23 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 24 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 25 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 26 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 27 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 28 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 29 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 30 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 31 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 32 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 33 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 34 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 35 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 36 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 37 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 38 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 39 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 40 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 41 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 42 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 43 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 44 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 58, 72, ),
        /* 45 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 46 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 47 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 48 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 49 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 50 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 51 */ array(12, 14, 15, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 57, 72, ),
        /* 52 */ array(1, 22, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 53 */ array(1, 3, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 54 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 55 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 56 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 57 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 58 */ array(1, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 59 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 60 */ array(1, 2, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 61 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 62 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 63 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 64 */ array(1, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 65 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 66 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 67 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 68 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 69 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 70 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 71 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 72 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 73 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 74 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 75 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 76 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 77 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 78 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 79 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 80 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 81 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 82 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 83 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 84 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 85 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 86 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 87 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 88 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 89 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, ),
        /* 90 */ array(1, 3, 16, 24, 30, 33, ),
        /* 91 */ array(1, 3, 24, 30, 49, ),
        /* 92 */ array(1, 24, 30, ),
        /* 93 */ array(4, 5, 6, 7, 8, 9, 12, 17, 18, 23, 27, 29, ),
        /* 94 */ array(5, 12, 17, 18, 23, 27, 29, 72, 73, ),
        /* 95 */ array(12, 15, 24, 26, 30, ),
        /* 96 */ array(12, 15, 24, 26, 30, ),
        /* 97 */ array(1, 3, 24, 30, ),
        /* 98 */ array(12, 15, 24, 30, ),
        /* 99 */ array(1, 3, 24, 30, ),
        /* 100 */ array(12, 15, 24, 30, ),
        /* 101 */ array(1, 24, 30, ),
        /* 102 */ array(1, 24, 30, ),
        /* 103 */ array(1, 2, ),
        /* 104 */ array(14, 33, ),
        /* 105 */ array(5, 12, 17, 18, 23, 27, 29, 72, 73, ),
        /* 106 */ array(1, 3, 24, 25, 30, 49, ),
        /* 107 */ array(1, 3, 24, 30, 49, ),
        /* 108 */ array(1, 3, 24, 30, 49, ),
        /* 109 */ array(16, 54, 57, 58, ),
        /* 110 */ array(12, 13, 15, 20, ),
        /* 111 */ array(1, 3, 49, ),
        /* 112 */ array(1, 26, 49, ),
        /* 113 */ array(14, 15, 57, ),
        /* 114 */ array(9, 10, 11, ),
        /* 115 */ array(16, 54, 58, ),
        /* 116 */ array(12, 15, ),
        /* 117 */ array(12, 15, ),
        /* 118 */ array(12, 15, ),
        /* 119 */ array(12, 15, ),
        /* 120 */ array(24, 30, ),
        /* 121 */ array(12, 15, ),
        /* 122 */ array(12, 15, ),
        /* 123 */ array(12, 15, ),
        /* 124 */ array(12, 15, ),
        /* 125 */ array(1, 49, ),
        /* 126 */ array(24, 30, ),
        /* 127 */ array(12, 15, ),
        /* 128 */ array(12, 15, ),
        /* 129 */ array(14, 33, ),
        /* 130 */ array(12, 15, ),
        /* 131 */ array(14, 33, ),
        /* 132 */ array(1, 16, ),
        /* 133 */ array(12, 15, ),
        /* 134 */ array(24, 30, ),
        /* 135 */ array(12, 15, ),
        /* 136 */ array(1, ),
        /* 137 */ array(1, ),
        /* 138 */ array(1, ),
        /* 139 */ array(1, ),
        /* 140 */ array(1, ),
        /* 141 */ array(1, ),
        /* 142 */ array(1, ),
        /* 143 */ array(1, ),
        /* 144 */ array(1, ),
        /* 145 */ array(),
        /* 146 */ array(12, 13, 15, 56, ),
        /* 147 */ array(12, 15, 56, ),
        /* 148 */ array(12, 13, 15, ),
        /* 149 */ array(12, 15, 56, ),
        /* 150 */ array(13, 54, 58, ),
        /* 151 */ array(12, 14, 15, ),
        /* 152 */ array(24, 30, ),
        /* 153 */ array(24, 30, ),
        /* 154 */ array(24, 30, ),
        /* 155 */ array(24, 30, ),
        /* 156 */ array(24, 30, ),
        /* 157 */ array(24, 30, ),
        /* 158 */ array(24, 30, ),
        /* 159 */ array(24, 30, ),
        /* 160 */ array(24, 30, ),
        /* 161 */ array(12, 15, ),
        /* 162 */ array(24, 30, ),
        /* 163 */ array(24, 30, ),
        /* 164 */ array(24, 30, ),
        /* 165 */ array(24, 30, ),
        /* 166 */ array(24, 30, ),
        /* 167 */ array(24, 30, ),
        /* 168 */ array(24, 30, ),
        /* 169 */ array(54, 58, ),
        /* 170 */ array(24, 30, ),
        /* 171 */ array(24, 30, ),
        /* 172 */ array(24, 30, ),
        /* 173 */ array(54, 58, ),
        /* 174 */ array(1, ),
        /* 175 */ array(24, ),
        /* 176 */ array(2, ),
        /* 177 */ array(1, ),
        /* 178 */ array(1, ),
        /* 179 */ array(1, ),
        /* 180 */ array(2, ),
        /* 181 */ array(24, ),
        /* 182 */ array(10, ),
        /* 183 */ array(1, ),
        /* 184 */ array(),
        /* 185 */ array(),
        /* 186 */ array(),
        /* 187 */ array(3, 19, 21, 22, 24, 25, 30, 32, 33, 34, 49, 59, ),
        /* 188 */ array(3, 13, 24, 30, 33, ),
        /* 189 */ array(12, 14, 15, 31, ),
        /* 190 */ array(33, 54, 59, ),
        /* 191 */ array(3, 13, 20, ),
        /* 192 */ array(32, 34, ),
        /* 193 */ array(32, 34, ),
        /* 194 */ array(32, 34, ),
        /* 195 */ array(26, 33, ),
        /* 196 */ array(13, 54, ),
        /* 197 */ array(15, 56, ),
        /* 198 */ array(32, 59, ),
        /* 199 */ array(13, 20, ),
        /* 200 */ array(2, 13, ),
        /* 201 */ array(19, 32, ),
        /* 202 */ array(12, 33, ),
        /* 203 */ array(15, ),
        /* 204 */ array(57, ),
        /* 205 */ array(14, ),
        /* 206 */ array(15, ),
        /* 207 */ array(3, ),
        /* 208 */ array(14, ),
        /* 209 */ array(3, ),
        /* 210 */ array(59, ),
        /* 211 */ array(15, ),
        /* 212 */ array(13, ),
        /* 213 */ array(15, ),
        /* 214 */ array(15, ),
        /* 215 */ array(2, ),
        /* 216 */ array(33, ),
        /* 217 */ array(3, ),
        /* 218 */ array(14, ),
        /* 219 */ array(15, ),
        /* 220 */ array(15, ),
        /* 221 */ array(14, ),
        /* 222 */ array(33, ),
        /* 223 */ array(14, ),
        /* 224 */ array(33, ),
        /* 225 */ array(20, ),
        /* 226 */ array(15, ),
        /* 227 */ array(15, ),
        /* 228 */ array(15, ),
        /* 229 */ array(21, ),
        /* 230 */ array(54, ),
        /* 231 */ array(34, ),
        /* 232 */ array(31, ),
        /* 233 */ array(31, ),
        /* 234 */ array(2, ),
        /* 235 */ array(50, ),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(),
        /* 249 */ array(),
        /* 250 */ array(),
        /* 251 */ array(),
        /* 252 */ array(),
        /* 253 */ array(),
        /* 254 */ array(),
        /* 255 */ array(),
        /* 256 */ array(),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
);
    static public $yy_default = array(
 /*     0 */   330,  494,  470,  470,  509,  509,  470,  509,  509,  509,
 /*    10 */   509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
 /*    20 */   509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
 /*    30 */   509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
 /*    40 */   509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
 /*    50 */   509,  509,  381,  509,  358,  351,  381,  381,  509,  509,
 /*    60 */   509,  509,  509,  509,  386,  509,  509,  509,  349,  402,
 /*    70 */   497,  386,  405,  392,  469,  383,  415,  388,  391,  468,
 /*    80 */   406,  414,  495,  407,  411,  363,  496,  410,  419,  418,
 /*    90 */   430,  394,  381,  327,  509,  381,  381,  401,  381,  436,
 /*   100 */   381,  381,  381,  372,  509,  509,  394,  394,  394,  509,
 /*   110 */   509,  394,  394,  509,  509,  437,  509,  509,  509,  509,
 /*   120 */   360,  509,  509,  509,  509,  394,  381,  509,  509,  509,
 /*   130 */   509,  509,  375,  509,  381,  509,  399,  423,  377,  421,
 /*   140 */   422,  404,  398,  417,  397,  477,  438,  448,  509,  438,
 /*   150 */   442,  509,  355,  348,  370,  371,  357,  352,  353,  356,
 /*   160 */   347,  461,  346,  366,  362,  361,  368,  345,  359,  442,
 /*   170 */   369,  367,  365,  441,  373,  508,  471,  436,  376,  378,
 /*   180 */   472,  508,  341,  401,  476,  476,  476,  396,  430,  509,
 /*   190 */   430,  420,  509,  509,  509,  430,  426,  509,  509,  420,
 /*   200 */   458,  509,  460,  509,  509,  509,  509,  509,  509,  509,
 /*   210 */   509,  509,  509,  509,  509,  458,  416,  509,  509,  509,
 /*   220 */   509,  509,  458,  509,  430,  420,  509,  509,  509,  389,
 /*   230 */   426,  509,  509,  428,  458,  432,  464,  462,  364,  382,
 /*   240 */   459,  507,  390,  328,  393,  478,  465,  455,  452,  453,
 /*   250 */   454,  432,  447,  445,  413,  429,  431,  395,  427,  425,
 /*   260 */   473,  474,  424,  396,  444,  439,  443,  440,  435,  434,
 /*   270 */   456,  433,  475,  458,  334,  335,  336,  333,  332,  329,
 /*   280 */   331,  337,  338,  379,  380,  457,  343,  342,  339,  340,
 /*   290 */   449,  450,  498,  499,  500,  374,  503,  400,  504,  502,
 /*   300 */   505,  492,  463,  466,  493,  491,  506,  501,  490,  489,
 /*   310 */   409,  412,  479,  408,  446,  451,  403,  480,  481,  486,
 /*   320 */   487,  488,  485,  484,  482,  483,  467,
);
    const YYNOCODE = 114;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 327;
    const YYNRULE = 182;
    const YYERRORSYMBOL = 74;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'RDEL',        
  'COMMENT',       'TEXT',          'STRIPON',       'STRIPOFF',    
  'BLOCKSOURCE',   'LITERALSTART',  'LITERALEND',    'LITERAL',     
  'LDEL',          'EQUAL',         'DOLLAR',        'ID',          
  'PTR',           'LDELIF',        'LDELFOR',       'SEMICOLON',   
  'INCDEC',        'TO',            'STEP',          'LDELFOREACH', 
  'SPACE',         'AS',            'APTR',          'LDELSETFILTER',
  'SMARTYBLOCKCHILDPARENT',  'LDELSLASH',     'ATTR',          'INTEGER',     
  'COMMA',         'OPENP',         'CLOSEP',        'MATH',        
  'UNIMATH',       'ANDSYM',        'ISIN',          'ISDIVBY',     
  'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',    
  'ISNOTEVENBY',   'ISODD',         'ISNOTODD',      'ISODDBY',     
  'ISNOTODDBY',    'INSTANCEOF',    'QMARK',         'NOT',         
  'TYPECAST',      'HEX',           'DOT',           'SINGLEQUOTESTRING',
  'AT',            'HATCH',         'OPENB',         'CLOSEB',      
  'EQUALS',        'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',    
  'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',
  'MOD',           'LAND',          'LOR',           'LXOR',        
  'QUOTE',         'DOLLARID',      'error',         'start',       
  'template',      'template_element',  'smartytag',     'literal',     
  'literal_elements',  'literal_element',  'value',         'modifierlist',
  'attributes',    'expr',          'variable',      'statement',   
  'statements',    'optspace',      'varvar',        'foraction',   
  'modparameters',  'attribute',     'variablebase',  'ternary',     
  'array',         'ifcond',        'lop',           'function',    
  'doublequoted_with_quotes',  'variableinternal',  'indexdef',      'objectelement',
  'varvarele',     'method',        'params',        'modifier',    
  'modparameter',  'arrayelements',  'arrayelement',  'doublequoted',
  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag RDEL",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= TEXT",
 /*   8 */ "template_element ::= STRIPON",
 /*   9 */ "template_element ::= STRIPOFF",
 /*  10 */ "template_element ::= BLOCKSOURCE",
 /*  11 */ "literal ::= LITERALSTART LITERALEND",
 /*  12 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  13 */ "literal_elements ::= literal_elements literal_element",
 /*  14 */ "literal_elements ::=",
 /*  15 */ "literal_element ::= literal",
 /*  16 */ "literal_element ::= LITERAL",
 /*  17 */ "smartytag ::= LDEL value",
 /*  18 */ "smartytag ::= LDEL value modifierlist attributes",
 /*  19 */ "smartytag ::= LDEL value attributes",
 /*  20 */ "smartytag ::= LDEL expr modifierlist attributes",
 /*  21 */ "smartytag ::= LDEL expr attributes",
 /*  22 */ "smartytag ::= LDEL variable EQUAL expr",
 /*  23 */ "smartytag ::= LDEL DOLLAR ID EQUAL value",
 /*  24 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr",
 /*  25 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
 /*  26 */ "smartytag ::= LDEL ID attributes",
 /*  27 */ "smartytag ::= LDEL ID",
 /*  28 */ "smartytag ::= LDEL ID PTR ID attributes",
 /*  29 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  30 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  31 */ "smartytag ::= LDELIF expr",
 /*  32 */ "smartytag ::= LDELIF expr attributes",
 /*  33 */ "smartytag ::= LDELIF statement",
 /*  34 */ "smartytag ::= LDELIF statement attributes",
 /*  35 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes",
 /*  36 */ "foraction ::= EQUAL expr",
 /*  37 */ "foraction ::= INCDEC",
 /*  38 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  39 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  40 */ "smartytag ::= LDELFOREACH attributes",
 /*  41 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
 /*  42 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  43 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
 /*  44 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  45 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  46 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
 /*  47 */ "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT",
 /*  48 */ "smartytag ::= LDELSLASH ID",
 /*  49 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  50 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  51 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  52 */ "attributes ::= attributes attribute",
 /*  53 */ "attributes ::= attribute",
 /*  54 */ "attributes ::=",
 /*  55 */ "attribute ::= SPACE ID EQUAL ID",
 /*  56 */ "attribute ::= ATTR expr",
 /*  57 */ "attribute ::= ATTR value",
 /*  58 */ "attribute ::= SPACE ID",
 /*  59 */ "attribute ::= SPACE expr",
 /*  60 */ "attribute ::= SPACE value",
 /*  61 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  62 */ "statements ::= statement",
 /*  63 */ "statements ::= statements COMMA statement",
 /*  64 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  65 */ "statement ::= variablebase EQUAL expr",
 /*  66 */ "statement ::= OPENP statement CLOSEP",
 /*  67 */ "expr ::= value",
 /*  68 */ "expr ::= ternary",
 /*  69 */ "expr ::= DOLLAR ID COLON ID",
 /*  70 */ "expr ::= expr MATH value",
 /*  71 */ "expr ::= expr UNIMATH value",
 /*  72 */ "expr ::= expr ANDSYM value",
 /*  73 */ "expr ::= array",
 /*  74 */ "expr ::= expr modifierlist",
 /*  75 */ "expr ::= expr ifcond expr",
 /*  76 */ "expr ::= expr ISIN array",
 /*  77 */ "expr ::= expr ISIN value",
 /*  78 */ "expr ::= expr lop expr",
 /*  79 */ "expr ::= expr ISDIVBY expr",
 /*  80 */ "expr ::= expr ISNOTDIVBY expr",
 /*  81 */ "expr ::= expr ISEVEN",
 /*  82 */ "expr ::= expr ISNOTEVEN",
 /*  83 */ "expr ::= expr ISEVENBY expr",
 /*  84 */ "expr ::= expr ISNOTEVENBY expr",
 /*  85 */ "expr ::= expr ISODD",
 /*  86 */ "expr ::= expr ISNOTODD",
 /*  87 */ "expr ::= expr ISODDBY expr",
 /*  88 */ "expr ::= expr ISNOTODDBY expr",
 /*  89 */ "expr ::= value INSTANCEOF ID",
 /*  90 */ "expr ::= value INSTANCEOF value",
 /*  91 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  92 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  93 */ "value ::= variable",
 /*  94 */ "value ::= UNIMATH value",
 /*  95 */ "value ::= NOT value",
 /*  96 */ "value ::= TYPECAST value",
 /*  97 */ "value ::= variable INCDEC",
 /*  98 */ "value ::= HEX",
 /*  99 */ "value ::= INTEGER",
 /* 100 */ "value ::= INTEGER DOT INTEGER",
 /* 101 */ "value ::= INTEGER DOT",
 /* 102 */ "value ::= DOT INTEGER",
 /* 103 */ "value ::= ID",
 /* 104 */ "value ::= function",
 /* 105 */ "value ::= OPENP expr CLOSEP",
 /* 106 */ "value ::= SINGLEQUOTESTRING",
 /* 107 */ "value ::= doublequoted_with_quotes",
 /* 108 */ "value ::= smartytag RDEL",
 /* 109 */ "value ::= value modifierlist",
 /* 110 */ "variable ::= variableinternal",
 /* 111 */ "variablebase ::= DOLLAR varvar",
 /* 112 */ "variableinternal ::= variableinternal indexdef",
 /* 113 */ "variableinternal ::= variablebase indexdef indexdef",
 /* 114 */ "variableinternal ::= variablebase indexdef",
 /* 115 */ "variableinternal ::= variablebase",
 /* 116 */ "variableinternal ::= variableinternal objectelement",
 /* 117 */ "variableinternal ::= DOLLAR varvar AT ID",
 /* 118 */ "variableinternal ::= HATCH ID HATCH",
 /* 119 */ "variableinternal ::= HATCH variableinternal HATCH",
 /* 120 */ "indexdef ::= OPENB CLOSEB",
 /* 121 */ "indexdef ::= DOT DOLLAR varvar",
 /* 122 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 123 */ "indexdef ::= DOT ID",
 /* 124 */ "indexdef ::= DOT INTEGER",
 /* 125 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 126 */ "indexdef ::= OPENB ID CLOSEB",
 /* 127 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 128 */ "indexdef ::= OPENB expr CLOSEB",
 /* 129 */ "varvar ::= varvarele",
 /* 130 */ "varvar ::= varvar varvarele",
 /* 131 */ "varvarele ::= ID",
 /* 132 */ "varvarele ::= LDEL expr RDEL",
 /* 133 */ "objectelement ::= PTR ID",
 /* 134 */ "objectelement ::= PTR DOLLAR varvar",
 /* 135 */ "objectelement ::= PTR LDEL expr RDEL",
 /* 136 */ "objectelement ::= PTR ID LDEL expr RDEL",
 /* 137 */ "objectelement ::= PTR method",
 /* 138 */ "function ::= ID OPENP params CLOSEP",
 /* 139 */ "method ::= ID OPENP params CLOSEP",
 /* 140 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 141 */ "params ::= params COMMA expr",
 /* 142 */ "params ::= expr",
 /* 143 */ "params ::=",
 /* 144 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 145 */ "modifierlist ::= modifier modparameters",
 /* 146 */ "modifier ::= VERT AT ID",
 /* 147 */ "modifier ::= VERT ID",
 /* 148 */ "modparameters ::= modparameters modparameter",
 /* 149 */ "modparameters ::=",
 /* 150 */ "modparameter ::= COLON value",
 /* 151 */ "modparameter ::= COLON array",
 /* 152 */ "ifcond ::= EQUALS",
 /* 153 */ "ifcond ::= NOTEQUALS",
 /* 154 */ "ifcond ::= GREATERTHAN",
 /* 155 */ "ifcond ::= LESSTHAN",
 /* 156 */ "ifcond ::= GREATEREQUAL",
 /* 157 */ "ifcond ::= LESSEQUAL",
 /* 158 */ "ifcond ::= IDENTITY",
 /* 159 */ "ifcond ::= NONEIDENTITY",
 /* 160 */ "ifcond ::= MOD",
 /* 161 */ "lop ::= LAND",
 /* 162 */ "lop ::= LOR",
 /* 163 */ "lop ::= LXOR",
 /* 164 */ "array ::= OPENB arrayelements CLOSEB",
 /* 165 */ "arrayelements ::= arrayelement",
 /* 166 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 167 */ "arrayelements ::=",
 /* 168 */ "arrayelement ::= value APTR expr",
 /* 169 */ "arrayelement ::= ID APTR expr",
 /* 170 */ "arrayelement ::= expr",
 /* 171 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 172 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 173 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 174 */ "doublequoted ::= doublequotedcontent",
 /* 175 */ "doublequotedcontent ::= DOLLARID",
 /* 176 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 177 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 178 */ "doublequotedcontent ::= smartytag RDEL",
 /* 179 */ "doublequotedcontent ::= TEXT",
 /* 180 */ "optspace ::= SPACE",
 /* 181 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 81 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1614 "smarty_internal_templateparser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt,
                $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite($this->yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 75, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 76, 'rhs' => 2 ),
  array( 'lhs' => 76, 'rhs' => 0 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 0 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 6 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 11 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 78, 'rhs' => 7 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 7 ),
  array( 'lhs' => 78, 'rhs' => 10 ),
  array( 'lhs' => 78, 'rhs' => 7 ),
  array( 'lhs' => 78, 'rhs' => 10 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 3 ),
  array( 'lhs' => 78, 'rhs' => 4 ),
  array( 'lhs' => 78, 'rhs' => 5 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 0 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 4 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 8 ),
  array( 'lhs' => 95, 'rhs' => 7 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 3 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 82, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 5 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 5 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 5 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 5 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 0 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 0 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 0 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        14 => 11,
        181 => 11,
        12 => 12,
        66 => 12,
        125 => 12,
        128 => 12,
        13 => 13,
        94 => 13,
        96 => 13,
        97 => 13,
        15 => 15,
        16 => 15,
        37 => 15,
        59 => 15,
        60 => 15,
        67 => 15,
        68 => 15,
        73 => 15,
        93 => 15,
        98 => 15,
        99 => 15,
        104 => 15,
        106 => 15,
        107 => 15,
        110 => 15,
        111 => 15,
        124 => 15,
        129 => 15,
        165 => 15,
        170 => 15,
        180 => 15,
        17 => 17,
        18 => 18,
        20 => 18,
        19 => 19,
        21 => 19,
        22 => 22,
        23 => 23,
        24 => 23,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        33 => 31,
        32 => 32,
        34 => 32,
        35 => 35,
        36 => 36,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        43 => 41,
        42 => 42,
        44 => 42,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        62 => 53,
        142 => 53,
        146 => 53,
        150 => 53,
        151 => 53,
        54 => 54,
        143 => 54,
        149 => 54,
        55 => 55,
        56 => 56,
        57 => 56,
        58 => 58,
        61 => 61,
        63 => 63,
        64 => 64,
        65 => 64,
        69 => 69,
        70 => 70,
        71 => 70,
        72 => 70,
        74 => 74,
        109 => 74,
        75 => 75,
        78 => 75,
        89 => 75,
        76 => 76,
        77 => 77,
        79 => 79,
        80 => 80,
        81 => 81,
        86 => 81,
        82 => 82,
        85 => 82,
        83 => 83,
        88 => 83,
        84 => 84,
        87 => 84,
        90 => 90,
        91 => 91,
        92 => 92,
        95 => 95,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        105 => 105,
        108 => 108,
        112 => 112,
        113 => 113,
        114 => 114,
        115 => 115,
        121 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        123 => 123,
        126 => 126,
        127 => 127,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        144 => 144,
        145 => 145,
        147 => 147,
        148 => 148,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        159 => 159,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
    );
#line 92 "smarty_internal_templateparser.y"
    function yy_r0(){
    $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2007 "smarty_internal_templateparser.php"
#line 100 "smarty_internal_templateparser.y"
    function yy_r1(){
    if ($this->yystack[$this->yyidx + 0]->minor != null) {
        $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2014 "smarty_internal_templateparser.php"
#line 120 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->has_code) {
        $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + -1]->minor,true));
    } else {
        $this->_retvalue = null;
    }
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2026 "smarty_internal_templateparser.php"
#line 132 "smarty_internal_templateparser.y"
    function yy_r5(){
    $this->_retvalue = null;
    }
#line 2031 "smarty_internal_templateparser.php"
#line 137 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2036 "smarty_internal_templateparser.php"
#line 142 "smarty_internal_templateparser.y"
    function yy_r7(){
        if ($this->strip) {
            $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
#line 2045 "smarty_internal_templateparser.php"
#line 151 "smarty_internal_templateparser.y"
    function yy_r8(){
    $this->strip = true;
    }
#line 2050 "smarty_internal_templateparser.php"
#line 155 "smarty_internal_templateparser.y"
    function yy_r9(){
    $this->strip = false;
    }
#line 2055 "smarty_internal_templateparser.php"
#line 159 "smarty_internal_templateparser.y"
    function yy_r10(){
        if ($this->strip) {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
#line 2064 "smarty_internal_templateparser.php"
#line 168 "smarty_internal_templateparser.y"
    function yy_r11(){
    $this->_retvalue = '';
    }
#line 2069 "smarty_internal_templateparser.php"
#line 172 "smarty_internal_templateparser.y"
    function yy_r12(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2074 "smarty_internal_templateparser.php"
#line 176 "smarty_internal_templateparser.y"
    function yy_r13(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2079 "smarty_internal_templateparser.php"
#line 184 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2084 "smarty_internal_templateparser.php"
#line 198 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->compiler->assert_no_enforced_modifiers();
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2090 "smarty_internal_templateparser.php"
#line 203 "smarty_internal_templateparser.y"
    function yy_r18(){
    $this->compiler->assert_expected_modifier($this->yystack[$this->yyidx + -1]->minor);
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2096 "smarty_internal_templateparser.php"
#line 208 "smarty_internal_templateparser.y"
    function yy_r19(){
    $this->compiler->assert_no_enforced_modifiers();
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2102 "smarty_internal_templateparser.php"
#line 226 "smarty_internal_templateparser.y"
    function yy_r22(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . ' = (' . $this->yystack[$this->yyidx + 0]->minor . ');';
    }
#line 2107 "smarty_internal_templateparser.php"
#line 230 "smarty_internal_templateparser.y"
    function yy_r23(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + 0]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -2]->minor."'")));
    }
#line 2112 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")),$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2117 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2122 "smarty_internal_templateparser.php"
#line 247 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());
    }
#line 2127 "smarty_internal_templateparser.php"
#line 252 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2132 "smarty_internal_templateparser.php"
#line 257 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = "ob_start();\n".$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).'echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')) . ";\n";
    }
#line 2138 "smarty_internal_templateparser.php"
#line 263 "smarty_internal_templateparser.y"
    function yy_r30(){
    $this->_retvalue = "ob_start();\n".$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor)).'echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')) . ";\n";
    }
#line 2144 "smarty_internal_templateparser.php"
#line 269 "smarty_internal_templateparser.y"
    function yy_r31(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2150 "smarty_internal_templateparser.php"
#line 274 "smarty_internal_templateparser.y"
    function yy_r32(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2156 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2161 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2166 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2171 "smarty_internal_templateparser.php"
#line 306 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2176 "smarty_internal_templateparser.php"
#line 311 "smarty_internal_templateparser.y"
    function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2181 "smarty_internal_templateparser.php"
#line 316 "smarty_internal_templateparser.y"
    function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -4]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2186 "smarty_internal_templateparser.php"
#line 320 "smarty_internal_templateparser.y"
    function yy_r42(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -7]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -4]->minor))));
    }
#line 2191 "smarty_internal_templateparser.php"
#line 333 "smarty_internal_templateparser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2196 "smarty_internal_templateparser.php"
#line 337 "smarty_internal_templateparser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2201 "smarty_internal_templateparser.php"
#line 342 "smarty_internal_templateparser.y"
    function yy_r47(){
    $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.');
    if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') {
        // {$smarty.block.child}
        $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    } else {
        // {$smarty.block.parent}
        $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
    }
    }
#line 2213 "smarty_internal_templateparser.php"
#line 355 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2218 "smarty_internal_templateparser.php"
#line 359 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2223 "smarty_internal_templateparser.php"
#line 364 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2228 "smarty_internal_templateparser.php"
#line 368 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2233 "smarty_internal_templateparser.php"
#line 376 "smarty_internal_templateparser.y"
    function yy_r52(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2239 "smarty_internal_templateparser.php"
#line 382 "smarty_internal_templateparser.y"
    function yy_r53(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2244 "smarty_internal_templateparser.php"
#line 387 "smarty_internal_templateparser.y"
    function yy_r54(){
    $this->_retvalue = array();
    }
#line 2249 "smarty_internal_templateparser.php"
#line 392 "smarty_internal_templateparser.y"
    function yy_r55(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2262 "smarty_internal_templateparser.php"
#line 404 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2267 "smarty_internal_templateparser.php"
#line 412 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2272 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2277 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2283 "smarty_internal_templateparser.php"
#line 442 "smarty_internal_templateparser.y"
    function yy_r64(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2288 "smarty_internal_templateparser.php"
#line 470 "smarty_internal_templateparser.y"
    function yy_r69(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2293 "smarty_internal_templateparser.php"
#line 475 "smarty_internal_templateparser.y"
    function yy_r70(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2298 "smarty_internal_templateparser.php"
#line 494 "smarty_internal_templateparser.y"
    function yy_r74(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2303 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r75(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2308 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r76(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2313 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r77(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2318 "smarty_internal_templateparser.php"
#line 516 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2323 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r80(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2328 "smarty_internal_templateparser.php"
#line 524 "smarty_internal_templateparser.y"
    function yy_r81(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2333 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r82(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2338 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r83(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2343 "smarty_internal_templateparser.php"
#line 536 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2348 "smarty_internal_templateparser.php"
#line 560 "smarty_internal_templateparser.y"
    function yy_r90(){
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.self::$prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.";\n";
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.self::$prefix_number;
    }
#line 2355 "smarty_internal_templateparser.php"
#line 569 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2360 "smarty_internal_templateparser.php"
#line 573 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2365 "smarty_internal_templateparser.php"
#line 588 "smarty_internal_templateparser.y"
    function yy_r95(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2370 "smarty_internal_templateparser.php"
#line 609 "smarty_internal_templateparser.y"
    function yy_r100(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2375 "smarty_internal_templateparser.php"
#line 613 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2380 "smarty_internal_templateparser.php"
#line 617 "smarty_internal_templateparser.y"
    function yy_r102(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2385 "smarty_internal_templateparser.php"
#line 622 "smarty_internal_templateparser.y"
    function yy_r103(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2398 "smarty_internal_templateparser.php"
#line 640 "smarty_internal_templateparser.y"
    function yy_r105(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2403 "smarty_internal_templateparser.php"
#line 656 "smarty_internal_templateparser.y"
    function yy_r108(){
    self::$prefix_number++;
    $this->compiler->prefix_code[] = 'ob_start();'.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.self::$prefix_number.'=ob_get_clean();';
    $this->_retvalue = '$_tmp'.self::$prefix_number;
    }
#line 2410 "smarty_internal_templateparser.php"
#line 679 "smarty_internal_templateparser.y"
    function yy_r112(){
    if ($this->yystack[$this->yyidx + 0]->minor === '[]') {
        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileSafeLookupWithBase($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2419 "smarty_internal_templateparser.php"
#line 688 "smarty_internal_templateparser.y"
    function yy_r113(){
    if ($this->yystack[$this->yyidx + -2]->minor == '\'smarty\'') {
        $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    } else {
        $this->_retvalue = $this->compileSafeLookupWithBase($this->compileVariable($this->yystack[$this->yyidx + -2]->minor), $this->yystack[$this->yyidx + -1]->minor);
        $this->_retvalue = $this->compileSafeLookupWithBase($this->_retvalue, $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2429 "smarty_internal_templateparser.php"
#line 697 "smarty_internal_templateparser.y"
    function yy_r114(){
    if ($this->yystack[$this->yyidx + -1]->minor == '\'smarty\'') {
        $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + 0]->minor);
    } elseif ($this->yystack[$this->yyidx + 0]->minor === '[]') {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileSafeLookupWithBase($this->compileVariable($this->yystack[$this->yyidx + -1]->minor), $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2440 "smarty_internal_templateparser.php"
#line 707 "smarty_internal_templateparser.y"
    function yy_r115(){
    $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2445 "smarty_internal_templateparser.php"
#line 711 "smarty_internal_templateparser.y"
    function yy_r116(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2450 "smarty_internal_templateparser.php"
#line 715 "smarty_internal_templateparser.y"
    function yy_r117(){
    $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2455 "smarty_internal_templateparser.php"
#line 720 "smarty_internal_templateparser.y"
    function yy_r118(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';
    }
#line 2460 "smarty_internal_templateparser.php"
#line 724 "smarty_internal_templateparser.y"
    function yy_r119(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';
    }
#line 2465 "smarty_internal_templateparser.php"
#line 728 "smarty_internal_templateparser.y"
    function yy_r120(){
    $this->_retvalue = '[]';
    }
#line 2470 "smarty_internal_templateparser.php"
#line 738 "smarty_internal_templateparser.y"
    function yy_r122(){
    $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2475 "smarty_internal_templateparser.php"
#line 742 "smarty_internal_templateparser.y"
    function yy_r123(){
    $this->_retvalue = "'". $this->yystack[$this->yyidx + 0]->minor ."'";
    }
#line 2480 "smarty_internal_templateparser.php"
#line 755 "smarty_internal_templateparser.y"
    function yy_r126(){
    $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), '\'section\'', '\'' . $this->yystack[$this->yyidx + -1]->minor . '\'') . '[\'index\']';
    }
#line 2485 "smarty_internal_templateparser.php"
#line 759 "smarty_internal_templateparser.y"
    function yy_r127(){
    $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), '\'section\'', '\'' . $this->yystack[$this->yyidx + -3]->minor . '\']') . '[\''.$this->yystack[$this->yyidx + -1]->minor.'\']';
    }
#line 2490 "smarty_internal_templateparser.php"
#line 776 "smarty_internal_templateparser.y"
    function yy_r130(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2495 "smarty_internal_templateparser.php"
#line 781 "smarty_internal_templateparser.y"
    function yy_r131(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2500 "smarty_internal_templateparser.php"
#line 786 "smarty_internal_templateparser.y"
    function yy_r132(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2505 "smarty_internal_templateparser.php"
#line 795 "smarty_internal_templateparser.y"
    function yy_r133(){
    if ($this->security && substr($this->yystack[$this->yyidx + 0]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2513 "smarty_internal_templateparser.php"
#line 802 "smarty_internal_templateparser.y"
    function yy_r134(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).'}';
    }
#line 2521 "smarty_internal_templateparser.php"
#line 809 "smarty_internal_templateparser.y"
    function yy_r135(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -1]->minor.'}';
    }
#line 2529 "smarty_internal_templateparser.php"
#line 816 "smarty_internal_templateparser.y"
    function yy_r136(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -3]->minor.'\'.'.$this->yystack[$this->yyidx + -1]->minor.'}';
    }
#line 2537 "smarty_internal_templateparser.php"
#line 824 "smarty_internal_templateparser.y"
    function yy_r137(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2542 "smarty_internal_templateparser.php"
#line 832 "smarty_internal_templateparser.y"
    function yy_r138(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);

            $is_language_construct = $func_name === 'isset' || $func_name === 'empty';
            $combined_params = array();
            foreach ($this->yystack[$this->yyidx + -1]->minor as $param) {
                if ($is_language_construct && $param instanceof BrainySafeLookupWrapper) {
                    $combined_params[] = $param->getUnsafe();
                    continue;
                }
                $combined_params[] = $param;
            }
            $par = implode(',', $combined_params);

            if ($func_name == 'isset') {
                if (count($combined_params) == 0) {
                    $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                }
                if (strncasecmp($par,'$_smarty_tpl->getConfigVariable',strlen('$_smarty_tpl->getConfigVariable')) === 0) {
                    self::$prefix_number++;
                    $this->compiler->prefix_code[] = '$_tmp'.self::$prefix_number.'='.str_replace(')',', false)',$par).";\n";
                    $isset_par = '$_tmp'.self::$prefix_number;
                } else {
                    $isset_par=str_replace("')->value","',null,true,false)->value",$par);
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($combined_params) != 1) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                }
                if ($func_name == 'empty') {
                    $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$combined_params[0]).')';
                } else {
                    $this->_retvalue = $func_name.'('.$combined_params[0].')';
                }
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $par .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2589 "smarty_internal_templateparser.php"
#line 881 "smarty_internal_templateparser.y"
    function yy_r139(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2597 "smarty_internal_templateparser.php"
#line 888 "smarty_internal_templateparser.y"
    function yy_r140(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.self::$prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';';
    $this->_retvalue = '$_tmp'.self::$prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2607 "smarty_internal_templateparser.php"
#line 899 "smarty_internal_templateparser.y"
    function yy_r141(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2612 "smarty_internal_templateparser.php"
#line 916 "smarty_internal_templateparser.y"
    function yy_r144(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2617 "smarty_internal_templateparser.php"
#line 920 "smarty_internal_templateparser.y"
    function yy_r145(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2622 "smarty_internal_templateparser.php"
#line 928 "smarty_internal_templateparser.y"
    function yy_r147(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2627 "smarty_internal_templateparser.php"
#line 936 "smarty_internal_templateparser.y"
    function yy_r148(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2632 "smarty_internal_templateparser.php"
#line 956 "smarty_internal_templateparser.y"
    function yy_r152(){
    $this->_retvalue = '==';
    }
#line 2637 "smarty_internal_templateparser.php"
#line 960 "smarty_internal_templateparser.y"
    function yy_r153(){
    $this->_retvalue = '!=';
    }
#line 2642 "smarty_internal_templateparser.php"
#line 964 "smarty_internal_templateparser.y"
    function yy_r154(){
    $this->_retvalue = '>';
    }
#line 2647 "smarty_internal_templateparser.php"
#line 968 "smarty_internal_templateparser.y"
    function yy_r155(){
    $this->_retvalue = '<';
    }
#line 2652 "smarty_internal_templateparser.php"
#line 972 "smarty_internal_templateparser.y"
    function yy_r156(){
    $this->_retvalue = '>=';
    }
#line 2657 "smarty_internal_templateparser.php"
#line 976 "smarty_internal_templateparser.y"
    function yy_r157(){
    $this->_retvalue = '<=';
    }
#line 2662 "smarty_internal_templateparser.php"
#line 980 "smarty_internal_templateparser.y"
    function yy_r158(){
    $this->_retvalue = '===';
    }
#line 2667 "smarty_internal_templateparser.php"
#line 984 "smarty_internal_templateparser.y"
    function yy_r159(){
    $this->_retvalue = '!==';
    }
#line 2672 "smarty_internal_templateparser.php"
#line 988 "smarty_internal_templateparser.y"
    function yy_r160(){
    $this->_retvalue = '%';
    }
#line 2677 "smarty_internal_templateparser.php"
#line 992 "smarty_internal_templateparser.y"
    function yy_r161(){
    $this->_retvalue = '&&';
    }
#line 2682 "smarty_internal_templateparser.php"
#line 996 "smarty_internal_templateparser.y"
    function yy_r162(){
    $this->_retvalue = '||';
    }
#line 2687 "smarty_internal_templateparser.php"
#line 1000 "smarty_internal_templateparser.y"
    function yy_r163(){
    $this->_retvalue = ' XOR ';
    }
#line 2692 "smarty_internal_templateparser.php"
#line 1007 "smarty_internal_templateparser.y"
    function yy_r164(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2697 "smarty_internal_templateparser.php"
#line 1015 "smarty_internal_templateparser.y"
    function yy_r166(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2702 "smarty_internal_templateparser.php"
#line 1019 "smarty_internal_templateparser.y"
    function yy_r167(){
    return;
    }
#line 2707 "smarty_internal_templateparser.php"
#line 1023 "smarty_internal_templateparser.y"
    function yy_r168(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2712 "smarty_internal_templateparser.php"
#line 1027 "smarty_internal_templateparser.y"
    function yy_r169(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2717 "smarty_internal_templateparser.php"
#line 1039 "smarty_internal_templateparser.y"
    function yy_r171(){
    $this->_retvalue = "''";
    }
#line 2722 "smarty_internal_templateparser.php"
#line 1043 "smarty_internal_templateparser.y"
    function yy_r172(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 2727 "smarty_internal_templateparser.php"
#line 1048 "smarty_internal_templateparser.y"
    function yy_r173(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2733 "smarty_internal_templateparser.php"
#line 1053 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2738 "smarty_internal_templateparser.php"
#line 1057 "smarty_internal_templateparser.y"
    function yy_r175(){
    $this->_retvalue = new _smarty_code($this, '(string)' . $this->compileVariable("'" . substr($this->yystack[$this->yyidx + 0]->minor,1) . "'"));
    }
#line 2743 "smarty_internal_templateparser.php"
#line 1061 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = new _smarty_code($this, '(string)'.$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2748 "smarty_internal_templateparser.php"
#line 1065 "smarty_internal_templateparser.y"
    function yy_r177(){
    $this->_retvalue = new _smarty_code($this, '(string)('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 2753 "smarty_internal_templateparser.php"
#line 1069 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + -1]->minor);
    }
#line 2758 "smarty_internal_templateparser.php"
#line 1073 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2763 "smarty_internal_templateparser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if ($this->yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n",
                $this->yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 74 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2825 "smarty_internal_templateparser.php"
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 66 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2842 "smarty_internal_templateparser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n",
                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n",
                        $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n",
                                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
